*wiki.txt*    A simple wiki plugin for Vim
*wiki*

Author:  Karl Yngve Lervåg <karl.yngve@gmail.com>
License: MIT license {{{

  Copyright (c) 2018 Karl Yngve Lervåg

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to
  deal in the Software without restriction, including without limitation the
  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
  sell copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
  IN THE SOFTWARE.

}}}

==============================================================================
CONTENTS                                                        *wiki-contents*

  Introduction                                     |wiki-intro|
    Requirements                                   |wiki-intro-requirements|
    Features                                       |wiki-intro-features|
  Configuration                                    |wiki-config|
  Mappings                                         |wiki-mappings|
    Text objects                                   |wiki-mappings-text-obj|
    Journal mappings                               |wiki-mappings-default|
  Commands                                         |wiki-commands|
  Links                                            |wiki-links|
    Link URLs                                      |wiki-links-urls|
    Markdown links                                 |wiki-links-markdown|
    Wiki links                                     |wiki-links-wiki|
    Reference links                                |wiki-links-reference|
  Lists                                            |wiki-lists|
  Completion                                       |wiki-completion|
  Folding                                          |wiki-folding|
  Syntax highlighting                              |wiki-syntax|
    Common elements                                |wiki-syntax-common|
    Links                                          |wiki-syntax-links|
    Code blocks                                    |wiki-syntax-code|

==============================================================================
INTRODUCTION                                                       *wiki-intro*

This is a Vim plugin for writing and maintaining a personal wiki in Markdown
syntax. It is based on vimwiki [0], but written mostly from scratch.

The plugin will activate for any `.wiki` file as long as a top-level `index.wiki`
file is found. That is, any directory tree that contains an `index.wiki` will
be recognized as a wiki by this plugin. In addition, one may specify a main
wiki with the |g:wiki_root| option. This allows convenient mappings and
commands for opening the main wiki from anywhere.

------------------------------------------------------------------------------
Requirements~
                                                      *wiki-intro-requirements*

This plugin is mainly developed on and for Linux. Some or most of the features
should still work on Windows and OSX, but currently there are no guaranties.

The following is a list of external tools that are used for some of the
features:

- `date`
- `xdg-open`

------------------------------------------------------------------------------
Features~
                                                          *wiki-intro-features*

- Syntax highlighting for `.wiki` files (within the recognized wiki projects)
- Completion of wiki links and link anchors
- Mappings
  - Global mappings for accessing a specified wiki
  - Local mappings for
    - Navigation (follow links, go back, etc)
    - Renaming pages (will also update links in other pages)
    - Creating a table of contents
    - Toggling links
    - Toggling lists (marking as done/undone or add/remove TODO)
    - Running code snippets (Note: This needs work)
    - Viewing wiki link graphs
- Support for journal entries
  - Navigating the journal back and forth with `<c-j>` and `<c-k>`
  - Support for parsing journal entries in order to make weekly and monthly
    summaries. The parsed result needs manual editing for good results.
- Text objects
  - `il al` Link url
  - `it at` Link text
  - `ic ac` Code blocks
- Folding
- Third-party support
  - unite and denite sources

==============================================================================
CONFIGURATION                                                     *wiki-config*

*g:wiki_root*
  The root path for the main wiki, i.e. the wiki that is opened with the
  `<leader>ww` mapping.

  Default: ''

*g:wiki_journal*
  The name of the diary or journal sub folder.

  Default: `'journal'`

*g:wiki_journal_format*
  The format string used to construct new journal files.

  Default: `'%Y-%m-%d'`

*g:wiki_projects*
  List of project names (or regexes) used to collect journal entries when
  creating weekly or monthly summaries.

  Default: []

*g:wiki_mappings_use_defaults*
  Whether or not to use default mappings (see |wiki-mappings-default|). If
  this is set to 0, then only custom mappings will be applied. Custom mappings
  may either be specified explicitly or through |g:wiki_mappings_global| and
  |g:wiki_mappings_local|.

  Default: 1

*g:wiki_mappings_global*
*g:wiki_mappings_local*
  These options allow one to customize global and buffer local mappings
  through dictionaries where the keys are the right-hand sides and the values
  are the desired mappings, e.g.: >

    let g:wiki_mappings_global = {
        \ '<plug>(wiki-reload)' : ',wx',
        \}
<
  This example will keep the default maps (unless disabled), except for
  `<plug>(wiki-reload)`, which will be mapped to `,wx`. The available `<plug>`
  mappings are listed in |wiki-mappings|.

  Default: Undefined

*g:wiki_list_todos*
  A list of TODO toggles that may be toggled with |<plug>(wiki-list-toggle)|,
  which is by default mapped to `<c-s>`.

  Default: `['TODO', 'DONE']`

*g:wiki_toc_title*
  The title of TOC listings.

  Default: `'Contents'`

*g:wiki_file_open*
  Name of a function or a |FuncRef| for a function that should be used to open
  a file url (|wiki-links-urls|). The function should give a non-zero return
  value if it opens the url. If not, the plugin falls back to opening the url
  with Vim. An example: >

    let g:wiki_file_open = 'WikiFileOpen'

    function! WikiFileOpen(...) abort dict
      if self.path =~# 'pdf$'
        silent execute '!zathura' fnameescape(self.path) '&'
        return 1
      endif

      return 0
    endfunction

==============================================================================
COMMANDS                                                        *wiki-commands*

The following is a list of commands that are available in the wiki. Most of
the commands are also available as mappings of the form `<plug>(wiki-[name])`.

*<plug>(wiki-index)*
*WikiIndex*
  Go to wiki index. When not inside a wiki page, the index is specified by the
  option |g:wiki_root|.

*<plug>(wiki-journal)*
*WikiJournal*
  Go to todays journal entry.

*<plug>(wiki-reload)*
*WikiReload*
  Reload the wiki plugin. Mostly useful for plugin development.

*<plug>(wiki-code-run)*
*WikiCodeRun*
  Run current code snippet (this does not currently work properly).

*<plug>(wiki-graph-find-backlinks)*
*WikiGraphFindBacklinks*
  Find backlinks to current page.

*<plug>(wiki-graph-in)*
*WikiGraphIn*
  Show link graph to current page.

*<plug>(wiki-graph-out)*
*WikiGraphOut*
  Show link graph from current page.

*<plug>(wiki-link-next)*
*WikiLinkNext*
  Go to next link.

*<plug>(wiki-link-prev)*
*WikiLinkPrev*
  Go to previous link.

*<plug>(wiki-link-open)*
*WikiLinkOpen*
  Open/follow link.

*<plug>(wiki-link-open-split)*
*WikiLinkOpenSplit*
  Open/follow link in a |vsplit|.

*<plug>(wiki-link-return)*
*WikiLinkReturn*
  Go back to previous page.

*<plug>(wiki-link-toggle)*
*<plug>(wiki-link-toggle-visual)*    |xmap|
*<plug>(wiki-link-toggle-operator)*  |map-operator|
*WikiLinkToggle*
  Toggle wiki link.

*<plug>(wiki-list-toggle)*
*WikiListTottle*
  Toggle a list item. Map works in both normal and insert mode.

*<plug>(wiki-page-delete)*
*WikiPageDelete*
  Delete wiki page.

*<plug>(wiki-page-rename)*
*WikiPageRename*
  Rename wiki page (will update all links to the page).

*<plug>(wiki-page-toc)*
*WikiPageToc*
  Create/Update table of contents.

*<plug>(wiki-page-toc-local)*
*WikiPageTocLocal*
  Create/Update table of contents (section local variant).

*<plug>(wiki-journal-index)*
*WikiJournalIndex*
  Insert a sorted list of links to all journal pages below the cursor using
  wiki style links

*<plug>(wiki-journal-index-md)*
*WikiJournalIndex!*
  Insert a sorted list of links to all journal pages below the cursor using
  markdown style links

*<plug>(wiki-journal-next)*
*WikiJournalNext*
  Go to next day/week/month.

*<plug>(wiki-journal-prev)*
*WikiJournalPrev*
  Go to previous day/week/month.

*<plug>(wiki-journal-copy-tonext)*
*WikiJournalCopyToNext*
  Copy current entry to next work day (unless the entry for next workday
  already exists).

*<plug>(wiki-journal-toweek)*
*WikiJournalToWeek*
  Go to week summary.

*<plug>(wiki-journal-tomonth)*
*WikiJournalToMonth*
  Go to month summary.

==============================================================================
MAPPINGS                                                        *wiki-mappings*

Here we describe the mappings provided by the wiki plugin, as well as the
default maps. Note that most of the mappings are also available as commands.
These mappings are described in |wiki-commands|.

------------------------------------------------------------------------------
Text objects~
                                                       *wiki-mappings-text-obj*

The following mappings are available as visual mode and operator mode
mappings, i.e. |xmap| and |omap|.

*<plug>(wiki-al)*
*<plug>(wiki-il)*
  Text object for link urls.

*<plug>(wiki-at)*
*<plug>(wiki-it)*
  Text object for link texts.

*<plug>(wiki-ac)*
*<plug>(wiki-ic)*
  Text object for code blocks.

------------------------------------------------------------------------------
Default mappings~
                                                        *wiki-mappings-default*

This is a list of default mappings. For a more detailed description of each
mapping, read the documentation of the `<plug>(wiki-[name])` form of the
mapping. The mode specifier is a single letter which indicates which mode the
mapping is valid in. See e.g. |nmap|, |imap|, |omap| or |xmap| for more
information about the different modes.

  ---------------------------------------------------------------------~
   MODE  LHS                 RHS~
  ---------------------------------------------------------------------~
   `n`     <leader>ww          |<plug>(wiki-index)|               [GLOBAL]
   `n`     <leader>w<leader>w  |<plug>(wiki-journal)|             [GLOBAL]
   `n`     <leader>wx          |<plug>(wiki-reload)|              [GLOBAL]
   `n`     <leader>wc          |<plug>(wiki-code-run)|
   `n`     <leader>wb          |<plug>(wiki-graph-find-backlinks)|
   `n`     <leader>wg          |<plug>(wiki-graph-in)|
   `n`     <leader>wG          |<plug>(wiki-graph-out)|
   `n`     <leader>wf          |<plug>(wiki-link-toggle)|
   `n`     <leader>wd          |<plug>(wiki-page-delete)|
   `n`     <leader>wr          |<plug>(wiki-page-rename)|
   `n`     <leader>wt          |<plug>(wiki-page-toc)|
   `n`     <leader>wT          |<plug>(wiki-page-toc-local)|
   `n`     <tab>               |<plug>(wiki-link-next)|
   `n`     <cr>                |<plug>(wiki-link-open)|
   `n`     <c-cr>              |<plug>(wiki-link-open-split)|
   `n`     <s-tab>             |<plug>(wiki-link-prev)|
   `n`     <bs>                |<plug>(wiki-link-return)|
   `n`     gl                  |<plug>(wiki-link-toggle-operator)|
   `ni`    <c-s>               |<plug>(wiki-list-toggle)|
   `x`     <cr>                |<plug>(wiki-link-toggle-visual)|
   `ox`    al                  |<plug>(wiki-al)|
   `ox`    il                  |<plug>(wiki-il)|
   `ox`    at                  |<plug>(wiki-at)|
   `ox`    it                  |<plug>(wiki-it)|
   `ox`    ac                  |<plug>(wiki-ac)|
   `ox`    ic                  |<plug>(wiki-ic)|
  ---------------------------------------------------------------------~

==============================================================================
LINKS                                                              *wiki-links*

Links are one of the most essential features of a wiki, and as such, requires
particular attention.  A link is a structure that consists of an URL (see
|wiki-links-urls|) and a possibly empty description.  Links are highlighted as
described in |wiki-syntax-links|.  Any link may be activated with the mapping
`<cr>` or `<c-cr>`, where the latter will open the link in a split (if it is
an internal link).  One may use `<bs>` to navigate back after following
a link.

These are the link formats that are currently supported:

- Link URLs                          |wiki-links-url|
    `http://www.example.com`
    `wiki:index`
    `journal:2013-04-05`
    `doi:10.1002%2Fandp.19053220607`
- Markdown links                     |wiki-links-markdown|
    `[Description](Link)`
- Wiki links                         |wiki-links-wiki|
    `[[Link]]`
    `[[Link|Description]]`
- Reference links                    |wiki-links-reference|
    `[Target]`
    `[Description][Target]`

------------------------------------------------------------------------------
Link URLs~
                                                              *wiki-links-urls*

An URL, which is short for Uniform Resource Locator, has the general format

  `[scheme:]address`

The `scheme` specifies which kind of link it is.  If no handle is specified,
it is assumed that the address is an internal wiki link, i.e. the `wiki` scheme
is assumed.

The following schemes are supported:

  wiki~
  journal~
    Links to an internal wiki page.  The address can be both relative and
    absolute.  Absolute addresses are relative to the wiki root.  Further, the
    addresses may include anchors to specific sections of the wiki entry.
    Some examples might be enlightening: >

      wiki:index

      If the address has whitespace, we need to use a full link style, for
      instance:

      [[wiki:index#section 1]]

      Also, to link to a journal entry, one may use:
      journal:2014-03-02

      For convenience, an ISO date will also work as a journal link.
<
  file~
    Links to a file on the system and opens it.  This can be customized with
    |g:wiki_file_open|, but falls back to opening the file with Vim.

  doi~
    Will use the `generic` scheme handler on an expanded URL of the form
    `http://dx.doi.org/<address>`, where `<address>` is the link address.

  generic~
    If the scheme is not recognized, the link is opened with the system
    handler, which is `xdg-open` on Linux.  Currently, only Linux is supported
    here.  This will work quite well on standard Linux distributions, e.g. for
    opening `http` and `https` URLs.

Schemes are defined in `autoload/wiki/url/{scheme}.vim`, which means it is
relatively easy to define new custom schemes. See the generic scheme for
a simple example of how this is implemented.

------------------------------------------------------------------------------
Markdown links~
                                                          *wiki-links-markdown*

Markdown links are one of the standard type of links, and the look like this: >

  [Description](url)

One may toggle between markdown style links and wiki style links with the
`<leader>wf` mapping.

------------------------------------------------------------------------------
Wiki links~
                                                              *wiki-links-wiki*

Wiki links are similar in style to the standard Mediawiki links.  This is the
main syntax for creating internal wiki links.  The description part is
optional.  Examples: >

    [[Link]]
    [[Link|Description]]

Any non-link words may be turned into a wiki link with the `<cr>` mapping.
One may also use visual mode to turn a selection into a wiki link, or one may
use the `gl` operator.

The `<leader>wf` mapping can be used to add a description to a wiki link or to
toggle it to a markdown style link.

------------------------------------------------------------------------------
Reference links~
                                                         *wiki-links-reference*

Reference style links are slightly different.  They consist of up to three
parts: An optional `description`, a `target` and a `link.`  The syntax is best
explained through an example: >

  The most simple form, and perhaps the most useful one, is to add a simple
  reference like this [1].

  One may also add a [description][target].

  The target may consist of both words and numbers, e.g. [like this][Ref 3].
  [Description][Target]

  [1]: Link 1
  [Target]: Link 2
  [Ref 3]: Link 3

Reference style links may be opened with `<cr>` both on the reference location
and on the link line.

==============================================================================
LISTS                                                              *wiki-lists*

It is common to write lists inside wikis, and so there is some support for
working with lists:

- Use `<c-s>` in both insert and normal mode to toggle a TODO at the beginning
  of the list item, or to toggle the checkbox if it is present.

==============================================================================
COMPLETION                                                    *wiki-completion*

This plugin provides an |omni-complete| function that completes internal link
targets, including anchors.  This should work both for markdown and wiki
style links (see |wiki-links|).

==============================================================================
FOLDING                                                          *wiki-folding*

The plugin provides a simple folding function that folds according to section
depth.

==============================================================================
SYNTAX HIGHLIGHTING                                               *wiki-syntax*

This plugin supports a relatively standard type of simple Markdown syntax.

------------------------------------------------------------------------------
Common elements~
                                                           *wiki-syntax-common*

The following listing shows the set of common syntax elements that are
currently supported: >

  # Level 1 headings

  ## Level 2 headings

  Text formatting and math:
  - *bold text*
  - _italic text_
  - `inline code`
  - $f(x) = 1$

  Tables:
  |-----+-----------|
  | ID  | Value     |
  |-----+-----------|
  | 1   | Entry 1   |
  | 2   | Entry 2   |
  | ... | Entry ... |
  | 12  | Entry 12  |
  |-----+-----------|

  Check lists:
  - [ ] List item 1
  - [.] List item 2
  - [o] List item 3
  - [x] List item 4

  Quotes:
  > Blocks of text like this are highlighted as quotes.
  > Continued line of quote.

  > Blocks of text like this are highlighted as quotes even if
  the continued lines do not start with the initial quote symbol.

------------------------------------------------------------------------------
Links~
                                                            *wiki-syntax-links*

First, see |wiki-links| for a more general description of links.  Note that
a link in general consists of an url and a description, although the
description may be ignored.  The links will be highlighted and the |+conceal|
feature is used to only display the descriptions if they are present.

The following listing shows some examples of links. >

  [[Link]]
  [[Link|With description]]

  [Description](Link)

  Inline numbered links like this is also supported [0]. The link is supplied
  below.

  [0]: Link
<
URLs are also highlighted directly, e.g.: >

  journal:2013-04-05
  http://www.google.com
  doi:10.1002%2Fandp.19053220607
  file:/path/to/file

------------------------------------------------------------------------------
Code blocks~
                                                             *wiki-syntax-code*

Code blocks are blocks like the following: >

  ```sh
  ls ~
  echo "hello world"
  ```

If the code block has a language specifier, then the block will be highlighted
accordingly.

Note: The file is parsed when opened for code blocks, and only the languages
      detected are highlighted. Thus, if one adds a new code block with a new
      language, one may need to reload the file to get the appropriate
      highlighting.

==============================================================================
 vim:tw=78:ts=8:ft=help:norl:
